import numpy as np


A = [-1,-1,1,1,-1,-1,-1,
-1,-1,-1,1,-1,-1,-1,
-1,-1,-1,1,-1,-1,-1,
-1,-1,1,-1,1,-1,-1,
-1,-1,1,-1,1,-1,-1,
-1,1,1,1,1,1,-1,
-1,1,-1,-1,-1,1,-1,
-1,1,-1,-1,-1,1,-1,
1,1,1,-1,1,1,1]

A1 = [-1,-1,-1,1,-1,-1,-1,
-1,-1,-1,1,-1,-1,-1,
-1,-1,-1,1,-1,-1,-1,
-1,-1,1,-1,1,-1,-1,
-1,-1,1,-1,1,-1,-1,
-1,1,-1,-1,-1,1,-1,
-1,1,1,1,1,1,-1,
-1,1,-1,-1,-1,1,-1,
-1,1,-1,-1,-1,1,-1]

B = [1,1,1,1,1,1,-1,
-1,1,-1,-1,-1,-1,1,
-1,1,-1,-1,-1,-1,1,
-1,1,-1,-1,-1,-1,1,
-1,1,1,1,1,1,-1,
-1,1,-1,-1,-1,-1,1,
-1,1,-1,-1,-1,-1,1,
-1,1,-1,-1,-1,-1,1,
1,1,1,1,1,1,-1]

C= [-1,-1,1,1,1,1,1,
-1,1,-1,-1,-1,-1,1,
1,-1,-1,-1,-1,-1,-1,
1,-1,-1,-1,-1,-1,-1,
1,-1,-1,-1,-1,-1,-1,
1,-1,-1,-1,-1,-1,-1,
1,-1,-1,-1,-1,-1,-1,
-1,1,-1,-1,-1,-1,1,
-1,-1,1,1,1,1,-1,
]

E = [1,1,1,1,1,1,1,
-1,1,-1,-1,-1,-1,1,
-1,1,-1,-1,-1,-1,-1,
-1,1,-1,1,-1,-1,-1,
-1,1,1,1,-1,-1,-1,
-1,1,-1,1,-1,-1,-1,
-1,1,-1,-1,-1,-1,-1,
-1,1,-1,-1,-1,-1,1,
1,1,1,1,1,1,1,
]


features = np.array(
    [
        A,
        B,
        C, 
        A1,
        E
    ])

print(features)

target = np.array([1,-1,-1,1, -1])

print("our model : ")
print(features, target)
print("\n \n")

weight = np.zeros(63)
bias = 0
alpha = 1
theta = 0.3
learning_rate = 0.1
epoch = 2

 
for i in range(epoch):
    print("*********************************  epoch :", i+1)

    for j in range(features.shape[0]):

        print(" =========== s",[j+1])

        actual = target[j]
        
        
        sigma = 0

        for i in range(63):
            sigma += features[j][i] * weight[i]
        
        yin = bias + sigma


        yout = -2 

        if(yin > theta):
            yout = 1
        elif(-theta <= yin <= theta):
            yout = 0
        else:
            yout = -1
  
        print( "Yin : " ,yin , "yout : ", yout)
       
        if(yout != actual):

            print("new weights ----------- : ")

            for i in range(63):
                weight[i] += alpha * actual * features[j][i]
            bias += alpha * actual
  
       
        for i in range(63):
            print( "w"+str(i)+"(new) : " ,weight[i])

        print( "bias : " ,bias)
        

